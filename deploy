#!/bin/bash

# NOTE: discover is temporary until there is a vip
export IDB_URL=http://idb.56m.dmtio.net:18601
discover() {
  PRODUCT=$1
  ENVIRONMENT=$2
  LOCATION=$3
  QUERY="NOT+offline:true"
  if [ -n "$LOCATION" ]; then
    QUERY="location:$LOCATION+AND+$QUERY"
  fi
  curl -s "$IDB_URL/instances/$1/$2?q=$QUERY" | tr ',{}' "\n" | egrep '(PORT|ipaddress)' | cut -d'"' -f4 | paste -d':' - - | sed 's/^\([^.:]*\):\(.*\)$/\2:\1/'
}

random_server() {
  LIST=($(discover $1 $2 $3))
  echo -ne ${LIST[$(random_number ${#LIST[@]})]}
}

ENVIRONMENT=staging

TRIGGER_PRODUCT=${TRIGGER_PRODUCT:-deployit-trigger}
TRIGGER_ENVIRONMENT=${TRIGGER_ENVIRONMENT:-kube}
TRIGGER_LOCATION=${TRIGGER_LOCATION:-56m}

DEPLOYIT=${DEPLOYIT:-http://srd-10-60-179-191.nodes.56m.dmtio.net:19601}
TRIGGER=${TRIGGER:-$(random_server $TRIGGER_PRODUCT $TRIGGER_ENVIRONMENT $TRIGGER_LOCATION)}

source ./TURNER_METADATA

# Add or update pod in deployit (POST is add, PUT is update)
for i in POST PUT; do
  curl -sv -X$i $DEPLOYIT/shipments/$NAME/$ENVIRONMENT --data-binary '{"name":"'$NAME'","environment":"'$ENVIRONMENT'","replicas":1,"config":{"PORT":"8999","ENVIRONMENT":"'$ENVIRONMENT'","CUSTOMER":"mss"},"containers":[{"name":"'$NAME'","version":"'$VERSION'"}]}'
done

# Trigger deployment of pod
curl -sv -XPOST -d '' $TRIGGER/$NAME/$ENVIRONMENT
